# Generated by Django 3.2.4 on 2021-06-06 18:05

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='GenericReportData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('result', models.FloatField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('assignment_duration', models.FloatField(default=10, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)], verbose_name='Кількість відпрацьованих місяців за звітний період')),
                ('main_assignment', models.FloatField(default=100, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(100)], verbose_name='Відсоток ставки, яку обіймає за основною посадою')),
                ('additional_assignment', models.FloatField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(50)], verbose_name='Відсоток ставки, яку обіймає за штатним сумісництвом')),
                ('students_rating', models.FloatField(default=0, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Бал за наслідками анонімного анкетування студентів')),
            ],
        ),
        migrations.CreateModel(
            name='ReportPeriod',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_active', models.BooleanField(default=False, verbose_name='Активний')),
                ('report_period', models.CharField(choices=[('2020/2021', '2020/2021'), ('2021/2022', '2021/2022'), ('2022/2023', '2022/2023'), ('2023/2024', '2023/2024'), ('2024/2025', '2024/2025'), ('2025/2026', '2025/2026'), ('2026/2027', '2026/2027'), ('2027/2028', '2027/2028'), ('2028/2029', '2028/2029'), ('2029/2030', '2029/2030')], max_length=9, verbose_name='Період')),
            ],
            options={
                'verbose_name': 'Звітній період',
                'verbose_name_plural': 'Звітні періоди',
            },
        ),
        migrations.CreateModel(
            name='ScientificAndInnovativeWork',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('result', models.FloatField(default=0, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Підсумковий бал')),
                ('adjusted_result', models.FloatField(default=0)),
                ('one_one', models.FloatField(default=0, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Загальне значення')),
                ('generic_report_data', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='service_api.genericreportdata')),
            ],
            options={
                'verbose_name': 'Звіт "Науково-інноваційна робота"',
                'verbose_name_plural': 'Звіти "Науково-інноваційна робота"',
            },
        ),
        migrations.CreateModel(
            name='OrganizationalAndEducationalWork',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('result', models.FloatField(default=0, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Підсумковий бал')),
                ('adjusted_result', models.FloatField(default=0)),
                ('one_one', models.CharField(blank=True, choices=[(None, '-'), ('head', 'голова, заступник голови'), ('secretary', 'секретар'), ('member', 'член комісії')], default=None, max_length=10, null=True, verbose_name='посада')),
                ('two_one', models.BooleanField(default=False)),
                ('three_one', models.BooleanField(default=False)),
                ('four_one', models.BooleanField(default=False, verbose_name='голова, заступник голови')),
                ('four_two', models.BooleanField(default=False, verbose_name='секретар')),
                ('four_three', models.BooleanField(default=False, verbose_name='член')),
                ('four_four', models.BooleanField(default=False, verbose_name='голова, заступник голови')),
                ('four_five', models.BooleanField(default=False, verbose_name='секретар')),
                ('four_six', models.BooleanField(default=False, verbose_name='член')),
                ('five_one', models.IntegerField(default=0, verbose_name='голова оргкомітету')),
                ('five_two', models.IntegerField(default=0, verbose_name='вчений секретар оргкомітету')),
                ('five_three', models.IntegerField(default=0, verbose_name='інші члени оргкомітету')),
                ('six_one', models.BooleanField(default=False, verbose_name='навчальна аробота')),
                ('six_two', models.BooleanField(default=False, verbose_name='інші види діяльності')),
                ('seven_one', models.IntegerField(default=0, verbose_name='кількість днів')),
                ('eight_one', models.IntegerField(default=0, verbose_name='кількість робіт')),
                ('nine_one', models.IntegerField(default=0, verbose_name='кількість робіт')),
                ('ten_one', models.IntegerField(default=0, verbose_name='кількість студентів')),
                ('eleven_one', models.BooleanField(default=False, verbose_name='виконання обов’язків куратора (наставника) академічної групи')),
                ('eleven_two', models.BooleanField(default=False, verbose_name='проведення виховної роботи в гуртожитках')),
                ('twelve_one', models.BooleanField(default=False)),
                ('thirteen_one', models.IntegerField(default=0, verbose_name='голова, заступник голови')),
                ('thirteen_two', models.IntegerField(default=0, verbose_name='вчений секретар')),
                ('thirteen_three', models.IntegerField(default=0, verbose_name='член ради')),
                ('fourteen_one', models.BooleanField(default=False, verbose_name='завідувача кафедри (у тому числі відвідування занять завідувачем кафедри зі складанням відгуку, проведення засідань кафедри, участь у засіданнях  деканату факультету)')),
                ('fourteen_two', models.BooleanField(default=False, verbose_name='заступник завідувача кафедри на громадських засадах')),
                ('fifteen_one', models.IntegerField(default=0, verbose_name='кількість занять')),
                ('sixteen_one', models.IntegerField(default=0, verbose_name='кількість заходів')),
                ('seventeen_one', models.BooleanField(default=False, verbose_name='відповідальний секретар')),
                ('seventeen_two', models.BooleanField(default=False, verbose_name='заступник відповідального секретаря')),
                ('seventeen_three', models.BooleanField(default=False, verbose_name='голова предметної екзаменаційної комісії, комісії зі співбесіди')),
                ('seventeen_four', models.IntegerField(default=0, verbose_name='робота у відбірковій комісії')),
                ('seventeen_five', models.IntegerField(default=0, verbose_name='член комісії зі співбесіді, предметної екзаменаційної комісії')),
                ('seventeen_six', models.IntegerField(default=0, verbose_name='робота у групі контролю й введення даних до ЄДЕБО (відповідальний за введення даних до ЄДЕБО)')),
                ('seventeen_seven', models.IntegerField(default=0, verbose_name='робота у складі асистентської групи приймальної комісії')),
                ('seventeen_eight', models.IntegerField(default=0, verbose_name='робота в апеляційній комісії')),
                ('eighteen_one', models.BooleanField(default=False)),
                ('nineteen_one', models.IntegerField(default=0)),
                ('twenty_zero_one', models.IntegerField(default=0)),
                ('twenty_one_one', models.BooleanField(default=False)),
                ('twenty_two_one', models.BooleanField(default=False)),
                ('generic_report_data', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='service_api.genericreportdata')),
            ],
            options={
                'verbose_name': 'Звіт "Організаційно-виховна робота"',
                'verbose_name_plural': 'Звіти "Організаційно-виховна робота"',
            },
        ),
        migrations.AddField(
            model_name='genericreportdata',
            name='report_period',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='service_api.reportperiod'),
        ),
        migrations.AddField(
            model_name='genericreportdata',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='EducationalAndMethodicalWork',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('result', models.FloatField(default=0, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Підсумковий бал')),
                ('adjusted_result', models.FloatField(default=0)),
                ('one_one', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)], verbose_name='обсяг виконаного аудиторного навантаження (год.)')),
                ('one_two', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)], verbose_name='обсяг виконаного аудиторного навантаження (год.) іноземною мовою')),
                ('one_three', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)], verbose_name='загальне навчальне навантаження працівника (год.) за рік')),
                ('one_four', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)], verbose_name='середньорічне навчальне навантаження в ДНУ (год.)')),
                ('two_one', models.CharField(default='0', max_length=256, validators=[django.core.validators.RegexValidator('^[\\d+\\s*]+$', message='Невірний формат даних. Введіть числа через пробіл.')], verbose_name='методичних вказівок (рекомендацій)')),
                ('two_two', models.CharField(default='0', max_length=256, validators=[django.core.validators.RegexValidator('^[\\d+\\s*]+$', message='Невірний формат даних. Введіть числа через пробіл.')], verbose_name='навчально-методичних посібників, посібників')),
                ('two_three', models.CharField(default='0', max_length=256, validators=[django.core.validators.RegexValidator('^[\\d+\\s*]+$', message='Невірний формат даних. Введіть числа через пробіл.')], verbose_name='навчально-методичних матеріалів (підручників, посібників тощо), що подаються МОН України на закрите рецензування')),
                ('three_one', models.CharField(default='0', max_length=256, validators=[django.core.validators.RegexValidator('^[\\d+\\s*]+$', message='Невірний формат даних. Введіть числа через пробіл.')], verbose_name='нормативних документів, наданих МОН України для публічного обговорення')),
                ('three_two', models.CharField(default='0', max_length=256, validators=[django.core.validators.RegexValidator('^[\\d+\\s*]+$', message='Невірний формат даних. Введіть числа через пробіл.')], verbose_name='конкурсних дипломних проектів і робіт')),
                ('three_three', models.CharField(default='0', max_length=256, validators=[django.core.validators.RegexValidator('^[\\d+\\s*]+$', message='Невірний формат даних. Введіть числа через пробіл.')], verbose_name='конкурсних робіт МАН')),
                ('four_one', models.CharField(default='0', max_length=256, validators=[django.core.validators.RegexValidator('^[\\d+\\s*]+$', message='Невірний формат даних. Введіть числа через пробіл.')], verbose_name='кількість виконавців одного документу')),
                ('five_one', models.CharField(default='0', max_length=256, validators=[django.core.validators.RegexValidator('^[\\d+\\s*]+$', message='Невірний формат даних. Введіть числа через пробіл.')], verbose_name='редагування')),
                ('five_two', models.CharField(default='0', max_length=256, validators=[django.core.validators.RegexValidator('^[\\d+\\s*]+$', message='Невірний формат даних. Введіть числа через пробіл.')], verbose_name='переклад')),
                ('six_one', models.IntegerField(default='0', validators=[django.core.validators.RegexValidator('^[\\d+\\s*]+$', message='Невірний формат даних. Введіть числа через пробіл.')], verbose_name='керівнику (на всіх виконавців)')),
                ('seven_one', models.CharField(default='0', max_length=256, validators=[django.core.validators.RegexValidator('^[\\d+\\s*]+$', message='Невірний формат даних. Введіть числа через пробіл.')], verbose_name='курс лекцій')),
                ('seven_two', models.CharField(default='0', max_length=256, validators=[django.core.validators.RegexValidator('^[\\d+\\s*]+$', message='Невірний формат даних. Введіть числа через пробіл.')], verbose_name='видання методичних матеріалів навчально-методичні рекомендації')),
                ('seven_three', models.CharField(default='0', max_length=256, validators=[django.core.validators.RegexValidator('^[\\d+\\s*]+$', message='Невірний формат даних. Введіть числа через пробіл.')], verbose_name='підручник в Україні')),
                ('seven_four', models.CharField(default='0', max_length=256, validators=[django.core.validators.RegexValidator('^[\\d+\\s*]+$', message='Невірний формат даних. Введіть числа через пробіл.')], verbose_name='навчальний посібник в Україні')),
                ('seven_five', models.CharField(default='0', max_length=256, validators=[django.core.validators.RegexValidator('^[\\d+\\s*]+$', message='Невірний формат даних. Введіть числа через пробіл.')], verbose_name='підручник за кордоном')),
                ('seven_six', models.CharField(default='0', max_length=256, validators=[django.core.validators.RegexValidator('^[\\d+\\s*]+$', message='Невірний формат даних. Введіть числа через пробіл.')], verbose_name='навчальний посібник за кордоном')),
                ('eight_one', models.CharField(default='0', max_length=256, validators=[django.core.validators.RegexValidator('^[\\d+\\s*]+$', message='Невірний формат даних. Введіть числа через пробіл.')], verbose_name='І освітній рівень')),
                ('eight_two', models.CharField(default='0', max_length=256, validators=[django.core.validators.RegexValidator('^[\\d+\\s*]+$', message='Невірний формат даних. Введіть числа через пробіл.')], verbose_name='ІІ освітній рівень')),
                ('eight_three', models.CharField(default='0', max_length=256, validators=[django.core.validators.RegexValidator('^[\\d+\\s*]+$', message='Невірний формат даних. Введіть числа через пробіл.')], verbose_name='ІІІ освітній рівень')),
                ('nine_one', models.CharField(default='0', max_length=256, validators=[django.core.validators.RegexValidator('^[\\d+\\s*]+$', message='Невірний формат даних. Введіть числа через пробіл.')], verbose_name='розробка')),
                ('nine_two', models.CharField(default='0', max_length=256, validators=[django.core.validators.RegexValidator('^[\\d+\\s*]+$', message='Невірний формат даних. Введіть числа через пробіл.')], verbose_name='оновлення')),
                ('ten_one', models.CharField(default='0', max_length=256, validators=[django.core.validators.RegexValidator('^[\\d+\\s*]+$', message='Невірний формат даних. Введіть числа через пробіл.')], verbose_name='навчальних планів')),
                ('ten_two', models.CharField(default='0', max_length=256, validators=[django.core.validators.RegexValidator('^[\\d+\\s*]+$', message='Невірний формат даних. Введіть числа через пробіл.')], verbose_name='робочих навчальних планів')),
                ('ten_three', models.CharField(default='0', max_length=256, validators=[django.core.validators.RegexValidator('^[\\d+\\s*]+$', message='Невірний формат даних. Введіть числа через пробіл.')], verbose_name='навчальних планів')),
                ('ten_four', models.CharField(default='0', max_length=256, validators=[django.core.validators.RegexValidator('^[\\d+\\s*]+$', message='Невірний формат даних. Введіть числа через пробіл.')], verbose_name='робочих навчальних планів')),
                ('eleven_one', models.CharField(default='0', max_length=256, validators=[django.core.validators.RegexValidator('^[\\d+\\s*]+$', message='Невірний формат даних. Введіть числа через пробіл.')], verbose_name='розробка і підготовка')),
                ('eleven_two', models.CharField(default='0', max_length=256, validators=[django.core.validators.RegexValidator('^[\\d+\\s*]+$', message='Невірний формат даних. Введіть числа через пробіл.')], verbose_name='оновлення')),
                ('twelve_one', models.CharField(default='0', max_length=256, validators=[django.core.validators.RegexValidator('^[\\d+\\s*]+$', message='Невірний формат даних. Введіть числа через пробіл.')], verbose_name='розробка та затвердження')),
                ('thirteen_one', models.CharField(default='0', max_length=256, validators=[django.core.validators.RegexValidator('^[\\d+\\s*]+$', message='Невірний формат даних. Введіть числа через пробіл.')], verbose_name='ліцензійної')),
                ('thirteen_two', models.CharField(default='0', max_length=256, validators=[django.core.validators.RegexValidator('^[\\d+\\s*]+$', message='Невірний формат даних. Введіть числа через пробіл.')], verbose_name='акредитаційної')),
                ('fourteen_one', models.CharField(default='0', max_length=256, validators=[django.core.validators.RegexValidator('^[\\d+\\s*]+$', message='Невірний формат даних. Введіть числа через пробіл.')], verbose_name='підготовка')),
                ('fourteen_two', models.CharField(default='0', max_length=256, validators=[django.core.validators.RegexValidator('^[\\d+\\s*]+$', message='Невірний формат даних. Введіть числа через пробіл.')], verbose_name='оновлення')),
                ('fifteen_one', models.CharField(default='0', max_length=256, validators=[django.core.validators.RegexValidator('^[\\d+\\s*]+$', message='Невірний формат даних. Введіть числа через пробіл.')], verbose_name='розробка')),
                ('fifteen_two', models.CharField(default='0', max_length=256, validators=[django.core.validators.RegexValidator('^[\\d+\\s*]+$', message='Невірний формат даних. Введіть числа через пробіл.')], verbose_name='оновлення')),
                ('sixteen_one', models.CharField(default='0', max_length=256, validators=[django.core.validators.RegexValidator('^[\\d+\\s*]+$', message='Невірний формат даних. Введіть числа через пробіл.')], verbose_name='розробка')),
                ('sixteen_two', models.CharField(default='0', max_length=256, validators=[django.core.validators.RegexValidator('^[\\d+\\s*]+$', message='Невірний формат даних. Введіть числа через пробіл.')], verbose_name='оновлення')),
                ('sixteen_three', models.CharField(default='0', max_length=256, validators=[django.core.validators.RegexValidator('^[\\d+\\s*]+$', message='Невірний формат даних. Введіть числа через пробіл.')], verbose_name='розробка')),
                ('sixteen_four', models.CharField(default='0', max_length=256, validators=[django.core.validators.RegexValidator('^[\\d+\\s*]+$', message='Невірний формат даних. Введіть числа через пробіл.')], verbose_name='оновлення')),
                ('sixteen_five', models.CharField(default='0', max_length=256, validators=[django.core.validators.RegexValidator('^[\\d+\\s*]+$', message='Невірний формат даних. Введіть числа через пробіл.')], verbose_name='розробка')),
                ('sixteen_six', models.CharField(default='0', max_length=256, validators=[django.core.validators.RegexValidator('^[\\d+\\s*]+$', message='Невірний формат даних. Введіть числа через пробіл.')], verbose_name='оновлення')),
                ('seventeen_one', models.CharField(default='0', max_length=256, validators=[django.core.validators.RegexValidator('^[\\d+\\s*]+$', message='Невірний формат даних. Введіть числа через пробіл.')], verbose_name='розробка і впровадження')),
                ('eighteen_one', models.IntegerField(default=0)),
                ('nineteen_one', models.CharField(blank=True, choices=[(None, 'Не отримано'), ('professor', 'Професор'), ('docent', 'Доцент')], default=None, max_length=30, null=True)),
                ('generic_report_data', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='service_api.genericreportdata')),
            ],
            options={
                'verbose_name': 'Звіт "Навчально-методична робота"',
                'verbose_name_plural': 'Звіти "Навчально-методична робота"',
            },
        ),
        migrations.AddConstraint(
            model_name='genericreportdata',
            constraint=models.UniqueConstraint(fields=('user', 'report_period'), name='unique_user_report_period'),
        ),
    ]
